<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAbwAAABxCAMAAACZb+YzAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAACQUExURf8AAP////9ERP9MTP+ysv+dnf/29v/f3/9OTv/Nzf+QkP9JSf/Kyv/R0f8cHP+iov/D
        w//n5//v7//w8P9kZP+9vf9oaP9sbP/Y2P+YmP9/f/+2tv+urv9VVf+lpf8yMv87O/92dv+Li/8lJf9b
        W/+Bgf8uLv8UFP85Of95ef+Njf9xcf8nJ/9YWP9fX/8WFq91xyIAAA1tSURBVHhe7Z3dQts4EIX5K6FA
        gKSbAqUtFMpCW9p9/7fbxD5JNKMz0khxsnuh7wo0Y0NsaTSaIzt7jUaj0Wg0Go1Go9FoNBqNRqPRaDQa
        jYaT1+ufX2fvb0aT6XQ6Gd1cHd3+OICp8T/m8PZquk+ZzJ5f4GRyf1jPyRNO0nGCVk6qK5Ejz2DK8WT/
        1Xu45Hijp/B0/WPK/h+Yszyf40ZZjE7haXADvypOcJIF12izgBvhL3iEjGHL8QH+hBu45LiDv2QG65w/
        +7gtij24av7CcWl+jeGeZvY3/BnwqQPn6PiKNgv7I72DR8gtbBlu4c44hk+OEfwln2CdwzrXgr13lMsH
        HJfi9hgnyXOHQ2Lu4VGF6Nu5jvQVfjHv4RHyG7Y0/8Cbk50yeuCtCILuwyVuiwLmCk7xR5x8wWGaT7BX
        8Rkn6UCbiR3FWCeEKUO6w/jC1wm8FbBug9+JWM95xJEKHvCdfMNJFuSHMBwjnmAPmcCW5iO8DXyhl48C
        75xbQc0l/4ljJTzgOwmTzWe02ViD/xvsIXacD8nMG1dwS3MFb4kd5DfkwlgZZKBRBLYqREaQ70/WQPgM
        e8gzbElyKZJv+PKL+RHWoTnA+YvB8SFGwPfxHifpmKDRxopEbPB7Era/4WsDxzTwVcA4NF9w+nKCpcuS
        wrRHItIttKWApwZWAUxJ8hHfs9Ln8+YHWAemetzN+QfnWMMDvpOwkuDpUrxocQZriGd9/QO+CTzB9xK+
        Et90WUp6ZZMhXpkUJ60hOEeHZwjzlOkR1hBPugDXFEdwTcFXG5myVCX5qSXBCCdZA0MVIh/wDGHenWew
        hvyCLYEn4fYMYLgqrMx4I1hmVgDOsiKzUEojplDPEOb1KpbtxfFd45s94JzAWJ7COihsflhxM/t8NLtJ
        rn30DM4DvhOx7EdbGlpjhS3EUZX0RaALeNvwClMcogbA/pfPV6u418TovIbPEl9h2yDMP3KSQg9LIP7A
        FnIOmw2bKAn688YcwVPiqxGUwWoRHaNXeHS8mPc4KJV3oFlxfXDm4BDn6Mitl3vIWqVSUoBjAO2y+dpx
        VlIYDKuyEiVnlqP6p4YL+L4hPIV3SJWkEKdHXFzLZ/xwVHh13AIsXSnuX4ewaFQYGS7g49AcRKSpkRR+
        wy/gBz0R6y2C3UkKRvdmZScjcIbK9xyebntWRwo2hEfkaoYyRE+VpBAHlvkh9CPjAJPNJIURZULXGTi1
        RmwkAcYqCNYlgwV8Jil8JRs04n5RIymQafK70bVVb41wSQpfJrgtCuuGMAXAyLDoSpRnnDoFR7MitWnC
        gPWVX2SLQjymKiSFC7gFLK4BvQ+GirnCJSmY2yCOKHesDMim9jk0yvGRJ2SAIQM+G8JP3/FDCPzXVEgK
        ZIgtjqD9NTeI4aaAccnBHW6LAmYXOLNG7EVYwuc8lYIPpyHjUAFtjWQytAtgMiBVoS6ppJ8mUyDbmaTA
        pvYF9GI/XTBgXMID/iWsBTBJYf5vkVGlFzWsypW54CQP6j4YVxm6Q0x2JimwUkRHvgZkwOuRFRoy6/Tz
        PkCqF3oZUi4pkOjYxx4Wpff33zqbBc/ftyApmPu8qgtxOF4BYwlsCM9TLpZJ4oglxZICW5T0llf8Jknr
        E3BSbEFSsBWziXODooIH/Oy6lsCG8Lz5BT+GqOIJy/aSn4aE4uVMjl8lyUnA2EgB65DYN89TwyMMF/Bx
        aEjXB8hNVf8pWkOSkgIJPyt//C5J1rh3Jyn8xLk5d7nlaMxgAZ8N4a4PkHAq06tiSQE+IauaAp3Ck5nj
        /0BSAMd3hakGjlOUdwIqKXR9gKUj3RFLSiUFsnxdh3leL4KRwo9wbTssJCnEgpvL7/DOs11JoROMWA4h
        9GBWd0h8ArawWNei+PNSqewDLootSArWn4oYfXbsAJnDA/6Hx9Mct3pw4lCBaRFhuVBSIKWHYFHIq0p8
        11PHLp9SKHiSbnJUqyF7UGODSgq9iYzJcEorlBTYrB/UEXkClpjBhqsw5XFK/0vGmaIsD/gecIIlbAij
        7kdq02EyyaZxprYDeISEXYFfn0Tu6JIUhgJn93OeesAWPuXoscHCFVJAopruBzs2yiQFNqeFctgvtClg
        JXBJIR+zqmC5WYZpLH+C+qcUdCBiQ3gpK+HXkCAgsCNNSYGVv0Rh3/hEdv4BBwWMg2NtTUkxMZ6MT635
        0+ixgWYBTOz2BFUAtAhgijHKOGuMyr3ZfXcmKfTkn4th8AoRD/gexE413uFXkz4JjOurU/SUAgs7+XLN
        HHMO27zC9J4yNpbKdbGO5k81o7gHJ1hiSAo9bD/nSgUpkRTYsPJtDFAK9Bp3helkjNuiMP6g+Tj1A1sZ
        ZWHdGaZy9MkMSQGgIeQHTEWSArvSOp3mCrRZK4VdQRb15jYI3ESFNfLmsE+cJc6/ecD3oMdGei4iA3yV
        8LDBb4iTbARH+oexEIZV45cUzJFXzkHutTmMKP+tf0pBjw00hwSXlfS11VIDv4dYw4QFnOgzGdO4UW/j
        FaZEjWAY3sqLI9FF4QHfg5LbTEmhh20KhKlAUmALwnj1TbcgmTrJ7iQFzY/Si+/J713obsCGcHC5WO0M
        Q8YvKVCRPJ5ZjNchGTWb3UkKhMei+6f6ad2iY4EeG+y/CK8rCXjY7+aXFNh1JjMOD4RWJIRVsRVJgXJ9
        50/4cQgwPqcDPTbQLICpg8zQ6EhuSYG+4oVsDTazQsYuJQWLi+cZVZAj5PReLymoTSgJSaGHxbLO4JcU
        YBSwuekBNg2tuO1SUkjx9DzLL//kiOEBf7UC85OQFHpYD+/q5W5JgS6OYJPApqEfa6eSQob7W34/Vsiu
        ikZFRcBPSAoAjSFdAYblhkzFoo+rfXg/jjGeB+B3hE84W5IU8lwk126iUw8X8FmXkdMRWTp3RRp2JAtw
        xtNqBdBYCJsCxv+ExNPFouA6XMDHoQKYAPufFu34UdAdIKlXP1awlT9PbrYmKbiwX0QkRt5gAT8pKfSw
        Vfx8LeGUFNjG3WLINt7NJYUtYMjJ6s4MFvCTkgJAc8g8e2KSAnngqaYWGEE2FPBFslGM2QA84iNhj8N2
        WHmL+L/QpqjYNc+GsN4+Siat+QrbJymYT9cUQeo2sCgGf0rBEIhhjbD2SoQi03AaMhvCMK1gCSnPQ2JJ
        oUoBi4ij4a6eUii80tYes3BYDRfwcWhIpNSwpeADOzJOLOq1D0G89t+VpMDTLfPvGNmZuDA84POicJKM
        pNDDQscj21cWSQpvMGwMzrdmGEkBjzcrwmfSudBh3jy+b1heUrQpKgJ+RlIAJPbNWB+Les9GX9gREm3C
        4pmBISmYz6TjME0wQxkSI6wRxiwRloiGC/g5SaGHfIIpyyK1pGBmzsVEbydBu0JtrVpiFrzxSg9F+B4W
        o+hj7Oiz3v8Kc8dwAR+HCmAK8K6z4b4CzQOg1yDGG6Jg1ZjvYcljyHY8PltrWhE1B9OQs5JCj+f5pjm6
        99QrHxF69c+70xYkBePm0aH3YslD4sGqooCfIispAJgyKEnBEnhq0HnsziQFq8ZwHK/TreCseh4aFRWS
        Ahsb7OVXvsRDSQpWtaEKVX/YmaRgRw+lUx1YkogapYak8HriQdT92fVlfcC3XJOhhMrn0/M0RnIXVX3Q
        qqioMOVITPeTx9XLmO9PEz1VTmfe/IEiQgvaBDAJzIgggDNAo8TezgqsMS5XIbuTFPjLYZYcj2d3d1fp
        uKQivtk9PYRVNoekAGBMIkM7lc/z21ytLcmycrBDSQHnrke8UNgK+E5wjg42hPlTLR5BVaTzPLTn30do
        BWiZyQ5WYcpjpZte9N4CNFchCpdsCPM3UniyfiEp0A7mWMyY3yUGew/aFINLCgs2LDToBJgXup2I0OKR
        FHocXx0jvkuBb5+FMYU5x4RrpV1JCh0b6SKRwLlRpV68WwFtIZGk0OP4Ep1wYualBs9rngz9TK5ieVeq
        qTA5yL0+J0UcyDeKwuH06ZIUQH5vaSgp0DVPLBgx4BwR1g4GqzC5qL/e5HE3WOrAOTp8kkJPPsMNehnP
        5H0VICsbC3PZwSpMPioD54SkZ/VPKcwRhUvWpayFWP41JIGkQD+tEZA1Zj+HfQFaFIaksDl1qiRN27mk
        4EQULtEmgCkiX6iE4xy+f9F6VlhhyJn7wUs/yiSFAXgqH3tjviraqFafUwVtlQQOJut0gXdUsiuQYr7u
        ZF245K9P9P6BKgr3wI2sVctG9d7wpb9sCNuTfm7aXksKvFpkyJcR5qJknasOJyngy+4Vl2Tf90ff00Ad
        53YREB5ViITPKyn05F4AtKok8NTaXboyqu5hNlssKTxc4rYorGtJI/yzb9v+5DZRHre+ZciFKFx6JYWe
        dIU2GFn4XeF+Cbq5w3qd8KBBkbhm5jaIYwrb47vg5C43993cpnU549FfHyIDQpsAJgY8LOBlVJbJVmoL
        HBEDu/FVf6lV5J993BYFzAUcnJ4ba5nj8WU+Jbs/qOcs7P8vZ2gNSGXbD/DhrKaJQzQIPF+ZvQSHRJwt
        h9YbGiRbWyjEnH27/Xw1vhlNptPpZDS+Onr3KSt1NRqNRqPRaDQajUaj0Wg0Go1Go9FoNBqNIvb2/gWc
        C7omwlyXZAAAAABJRU5ErkJggg==
</value>
  </data>
</root>